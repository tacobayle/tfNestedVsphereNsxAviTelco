#cloud-config
users:
  - default

ssh_pwauth: True

chpasswd:
  list: |
    ubuntu:${password}
  expire: False

hostname: ${hostname}

write_files:
  - content: |
      #!/bin/bash
      run_cmd() {
        retry=10
        pause=60
        attempt=0
        echo "############################################################################################"
        while [ $attempt -ne $retry ]; do
          if eval "$@"; then
            echo "$1 PASSED"
            break
          else
            echo "$1 FAILED"
          fi
          ((attempt++))
          sleep $pause
          if [ $attempt -eq $retry ]; then
            echo "$1 FAILED after $retry retries" | tee /tmp/cloudInitFailed.log
            exit 255
          fi
        done
      }
      iface=`ip -o link show | awk -F': ' '{print $2}' | tail -1`
      mac=`ip -o link show | awk -F'link/ether ' '{print $2}' | awk -F' ' '{print $1}' | tail -1`
      hostname=`hostname`
      echo "${ip} $hostname" | sudo tee -a /etc/hosts
      echo "${ip_vcenter} ${vcenter_name}.${dns_domain}" | sudo tee -a /etc/hosts
      cp ${netplanFile} ${netplanFile}.old
      echo "network:" | sudo tee ${netplanFile}
      echo "    ethernets:" | sudo tee -a ${netplanFile}
      echo "        $iface:" | sudo tee -a ${netplanFile}
      echo "            dhcp4: false" | sudo tee -a ${netplanFile}
      echo "            addresses: [${ipCidr}]" | sudo tee -a ${netplanFile}
      echo "            match:" | sudo tee -a ${netplanFile}
      echo "                macaddress: $mac" | sudo tee -a ${netplanFile}
      echo "            set-name: $iface" | sudo tee -a ${netplanFile}
      echo "            gateway4: ${defaultGw}" | sudo tee -a ${netplanFile}
      echo "            nameservers:" | sudo tee -a ${netplanFile}
      echo "              addresses: [${dns}]" | sudo tee -a ${netplanFile}
      echo "    version: 2" | sudo tee -a ${netplanFile}
      sudo netplan apply
      run_cmd '! sudo apt update | grep Err'
      run_cmd 'sudo apt install -y python3-pip; ls /usr/bin/pip3'
      run_cmd 'sudo apt install -y python3-jmespath; pip3 list | grep jmespath'
      run_cmd 'pip3 install --upgrade pip'
      run_cmd 'pip3 install ansible-core==${ansible_core_version}'
      run_cmd 'pip3 install ansible==${ansible_version}; ls /usr/local/bin/ansible-playbook'
      run_cmd 'pip3 install avisdk==${avi_sdk_version}; pip3 list | grep avisdk'
      run_cmd 'sudo -u ubuntu ansible-galaxy collection install vmware.alb; sudo -u ubuntu ansible-galaxy collection list | grep vmware.alb'
      run_cmd 'pip3 install dnspython; pip3 list | grep dnspython'
      run_cmd 'pip3 install netaddr; pip3 list | grep netaddr'
      run_cmd 'sudo rm -f /tmp/signing.asc; wget https://baltocdn.com/helm/signing.asc -O /tmp/signing.asc; test $(ls -l /tmp/signing.asc | awk '"'"'{print $5}'"'"') -gt 0'
      run_cmd 'sudo apt-key add /tmp/signing.asc'
      run_cmd '! sudo add-apt-repository "deb https://baltocdn.com/helm/stable/debian/ all main" | grep Err:'
      run_cmd 'sudo apt-get update'
      run_cmd 'sudo apt-get install -y helm; ls /usr/bin/helm'
      run_cmd 'sudo apt install -y jq'
      run_cmd 'curl -L -o - "https://github.com/vmware/govmomi/releases/latest/download/govc_$(uname -s)_$(uname -m).tar.gz" | sudo tar -C /usr/local/bin -xvzf - govc ; ls /usr/local/bin/govc'
      echo "cloud init done" | tee /tmp/cloudInitDone.log
    path: /opt/bootstrap.sh
    permissions: 0755
  - content: |
      ${username} ALL=(ALL) NOPASSWD:ALL
    path: /etc/sudoers.d/${username}

runcmd:
  - /opt/bootstrap.sh